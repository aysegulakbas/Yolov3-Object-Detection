# -*- coding: utf-8 -*-
"""yolov3denemesonyeni.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_5QE2lNATG64yGke6tHvSFYDs6K9g14J
"""

!git clone https://github.com/AlexeyAB/darknet

# Commented out IPython magic to ensure Python compatibility.
#GPU ve opencv kullanabilmek için makefile dosyasında yapılması gereken değişiklikler.
# %cd darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile

!make

# Commented out IPython magic to ensure Python compatibility.
#Yardımcı olacak fonksiyonlar
def imShow(path):
  import cv2
  import matplotlib.pyplot as plt
#   %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()


# use this to download a file  
def download(path):
  from google.colab import files
  files.download(path)

# Commented out IPython magic to ensure Python compatibility.
#Öncelikle collabdan driveımıza bağlanmak için bir doğrulama yapmamız gerekiyor.
#Aşağıdaki kodu çalıştırarak çıkan linkte collab notebook'unu hangi hesabımız ile açtıysak o hesaba girerek gelen link ile doğrulama yapmalıyız.
# %cd ..
from google.colab import drive
drive.mount('/content/gdrive')

#Burada ise erişimi uzun olan drive dizini için kısa bir yol tanıma yapıyoruz
# "/content/gdrive/My\ Drive/" olan dizine /mydrive diyerek ulaşabiliriz.
!ln -s /content/gdrive/My\ Drive/ /mydrive
!ls /mydrive

!ls

# Commented out IPython magic to ensure Python compatibility.
# Yüklemiş olduğumuz .zip dosyasını collaba kopyalayalım
# %cd darknet/

!cp /mydrive/yolov3/obj.zip ../

# kopyaladığımız dosyayı zipten çıkaralım.
!unzip ../obj.zip -d data/

#Öncelikle config dosyasını düzenleyelim.
#Darknet içindeki yolov3.cfg dosyasını drive'ımıza kopyalayalım ve adını değiştirelim.
!cp cfg/yolov3.cfg /mydrive/yolov3/yolov3_custom.cfg

#Düzenlemiş olduğumuz config dosyasını geri yükleyelim
!cp /mydrive/yolov3/yolov3_custom.cfg ./cfg

#Oluşturduğumuz obj.names ve obj.data dosyalarını google collaba aktaralım
!cp /mydrive/yolov3/obj.names ./data
!cp /mydrive/yolov3/obj.data  ./data

#Train dosyamızı google collaba kopyalayalım
!cp /mydrive/yolov3/generate_train.py ./

#Şimdi bu python dosyasını çalıştırarak train için gerekli olayları bizim için yapmasını bekleyebiliriz.
!python generate_train.py

#Ağırlıkları alalım
!wget http://pjreddie.com/media/files/darknet53.conv.74

!./darknet detector train data/obj.data cfg/yolov3_custom.cfg  -dont_show

imShow('chart.png')

# Commented out IPython magic to ensure Python compatibility.
# test için kendi config dosyamızı set edelim.
# %cd cfg
!sed -i 's/batch=64/batch=1/' yolov3_custom.cfg
!sed -i 's/subdivisions=16/subdivisions=1/' yolov3_custom.cfg
# %cd ..

#Drive'ımıza yüklediğimiz fotoğraflar üzerinde test edebiliriz.
#Thresh değeri belirlediğimiz değerden yüksek olasılıklı tahminleri gösterir.
!./darknet detector test data/obj.data cfg/yolov3_custom.cfg /mydrive/yolov3/yolov3_custom_last.weights /mydrive/yolov3/fotograflar/01980.jpg -thresh 0.1
imShow('predictions.jpg')